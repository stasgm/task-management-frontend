{"version":3,"sources":["App.tsx","components/Header.tsx","services/tasks/dto/task.dto.ts","components/MainLayout.tsx","components/NotFound.tsx","pages/Auth/Login.tsx","pages/Auth/Register.tsx","services/tasks/tasks.service.ts","scenes/Tasks/components/TaskCreate.tsx","scenes/Tasks/components/TaskItem.tsx","scenes/Tasks/components/ConfirmDialog.tsx","scenes/Tasks/components/TaskList.tsx","scenes/Tasks/routes.tsx","scenes/routes.tsx","routes.tsx","index.tsx","services/auth/auth.service.ts","utils/auth.ts","services/base-http.service.ts","styles/theme.ts"],"names":["Router","isLogged","AuthProvider","isAuthenticated","useRoutes","routes","hot","module","Header","navigate","useNavigate","sx","flexGrow","position","variant","component","RouterLink","to","color","onClick","signout","TaskStatus","MainLayoutRoot","experimentalStyled","backgroundColor","theme","palette","background","paper","display","height","overflow","width","MainLayoutWrapper","flex","MainLayoutContainer","MainLayoutContent","MainLayout","NotFound","className","Login","useState","error","setError","loading","setLoading","status","setStatus","handleSubmit","authCredentialsDto","a","AuthService","signin","res","type","message","formik","useFormik","enableReinitialize","initialValues","username","password","validationSchema","yup","required","onSubmit","values","Box","flexDirection","justifyContent","Container","maxWidth","py","mb","alignItems","Typography","CircularProgress","size","mx","textAlign","TextField","Boolean","touched","errors","fullWidth","helperText","label","margin","name","onBlur","handleBlur","onChange","handleChange","value","Button","disabled","Link","Register","signup","TasksService","searchFilter","queryObj","search","length","queryStr","queryString","stringify","this","get","id","delete","updateTaskDto","patch","createTaskDto","post","BaseHttpService","CreateTask","params","useParams","setId","OPEN","title","setTitle","description","setDescription","useEffect","getById","resp","success","data","console","fetchById","handleClose","createTask","handleClearTask","log","updateTask","task","updateById","placeholder","e","target","TaskItem","onTaskDelete","onTaskUpdate","handleDeleteTask","handleEditTask","useCallback","EditActonIcon","IconButton","Edit","DeleteActionIcon","Delete","TableRow","style","IN_PROGRESS","DONE","getTaskStatusColor","border","action","hover","TableCell","text","getTaskStatusToString","ConfirmDialog","props","children","open","setOpen","onConfirm","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","TaskList","tasks","setTasks","confirmOpen","setConfirmOpen","taskId","setTaskId","fetchTasks","fetchAll","deleteById","prev","filter","i","handleNewTask","showDeleteDialog","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","slice","page","map","row","path","element","TaskCreate","index","Companies","Apps","appRoutes","isLoggedIn","ReactDOM","render","StrictMode","document","getElementById","result","accessToken","access_token","saveToken","removeToken","_isAuthenticated","callback","setTimeout","appEnv","process","REACT_APP_ENV","trim","serverUrl","appBaseUrl","BASE_URL","_accessToken","endpoint","options","axios","getCommonOptions","handleHttpError","statusCode","response","handle401","window","location","replace","token","loadToken","headers","Authorization","localStorage","setItem","getItem","removeItem","createTheme","shape","borderRadius","responsiveFontSizes"],"mappings":"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","file":"static/js/main.0aad7f15.chunk.js","sourcesContent":["import { useRoutes } from 'react-router-dom';\nimport { hot } from 'react-hot-loader';\n\nimport routes from './routes';\nimport Header from './components/Header';\n\nimport './App.css';\nimport AuthProvider from './utils/auth';\n\nconst Router = () => {\n  const isLogged = AuthProvider.isAuthenticated;\n\n  return useRoutes(routes(isLogged));\n};\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Router />\n    </div>\n  );\n};\n\nexport default hot(module)(App);\n","import { Typography, AppBar, Toolbar, Link, Box, Button } from '@mui/material';\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nimport AuthProvider from '../utils/auth';\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const handleLogout = () => AuthProvider.signout(() => navigate('/login'));\n  const handleLogin = () => navigate('/login');\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link component={RouterLink} to={'/'} variant=\"h6\" color=\"#fff\">\n              Home\n            </Link>\n          </Typography>\n          {AuthProvider.isAuthenticated ? (\n            <Button color=\"inherit\" onClick={handleLogout}>\n              Log out\n            </Button>\n          ) : (\n            <Button color=\"inherit\" onClick={handleLogin}>\n              Log in\n            </Button>\n          )}\n          {/* <Typography style={{ flexGrow: 1 }}>\n            <Link component={RouterLink} to={'/'} variant=\"h6\" color=\"#fff\">\n              Home\n            </Link>\n          </Typography>\n          <Typography style={{ flexGrow: 1, alignContent: 'right' }}>\n            {fakeAuthProvider.isAuthenticated ? (\n              <Link onClick={handleLogout} href=\"/#\" variant=\"h6\" color=\"#fff\">\n                Sign out\n              </Link>\n            ) : (\n              <Link onClick={handleLogin} href=\"/#\" variant=\"h6\" color=\"#fff\">\n                Sign in\n              </Link>\n            )}\n          </Typography> */}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default Header;\n","export interface TaskDto {\n  id: string;\n  title: string;\n  description: string;\n  status: TaskStatus;\n}\n\nexport enum TaskStatus {\n  OPEN = 'OPEN',\n  IN_PROGRESS = 'IN_PROGRESS',\n  DONE = 'DONE',\n}\n","import { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@mui/material';\n\nconst MainLayoutRoot = experimentalStyled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}));\n\nconst MainLayoutWrapper = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  // paddingTop: 64,\n});\n\nconst MainLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n});\n\nconst MainLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1>Page not found</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Typography, Link, Box, Button, CircularProgress, Container, TextField } from '@mui/material';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\n\nimport AuthService from '../../services/auth/auth.service';\nimport { AuthCredentialsDto } from '../../services/auth/dto/auth-credentials.dto';\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n\n  const handleSubmit = async (authCredentialsDto: AuthCredentialsDto) => {\n    setError(false);\n    setStatus('Loading');\n    setLoading(true);\n\n    const res = await AuthService.signin(authCredentialsDto);\n\n    if (res.type === 'SIGNUP') {\n      navigate('/');\n    } else if (res.type === 'ERROR') {\n      setError(true);\n      setStatus(res.message);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik<AuthCredentialsDto>({\n    enableReinitialize: true,\n    initialValues: {\n      username: 'Stas',\n      password: '123456781!aB',\n    },\n    validationSchema: yup.object({\n      username: yup.string().required('Fill the field'),\n      password: yup.string().required('Fill the field'),\n    }),\n    onSubmit: (values) => handleSubmit(values),\n  });\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n      }}\n    >\n      <Container\n        maxWidth=\"xs\"\n        sx={{\n          py: 2,\n        }}\n      >\n        <Box\n          sx={{\n            mb: 2,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Typography color=\"textPrimary\" variant=\"h4\">\n            Log in\n          </Typography>\n        </Box>\n        <form onSubmit={formik.handleSubmit}>\n          <Box sx={{ mb: 2, display: 'flex', alignItems: 'flex-end' }}>\n            {loading && <CircularProgress size={20} sx={{ mx: 2 }} />}\n            {error && (\n              <Typography color=\"error\" variant=\"h5\" sx={{ flexGrow: 1, textAlign: 'end' }}>\n                {status}\n              </Typography>\n            )}\n          </Box>\n          <TextField\n            error={Boolean(formik.touched.username && formik.errors.username)}\n            required\n            fullWidth\n            helperText={formik.touched.username && formik.errors.username}\n            label=\"Username\"\n            margin=\"normal\"\n            name=\"username\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.username}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(formik.touched.password && formik.errors.password)}\n            required\n            label=\"Password\"\n            fullWidth\n            helperText={formik.touched.password && formik.errors.password}\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"password\"\n            value={formik.values.password}\n            variant=\"outlined\"\n          />\n          <Box sx={{ py: 2 }}>\n            <Button\n              color=\"primary\"\n              disabled={loading || !!formik.errors.password || !!formik.errors.username}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Sign in\n            </Button>\n          </Box>\n          <Typography color=\"textSecondary\" variant=\"body1\">\n            Not registred yet?{' '}\n            <Link component={RouterLink} to={'/register'} variant=\"h6\">\n              Sign up\n            </Link>\n          </Typography>\n        </form>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Login;\n","import { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Typography, Link, Box, Button, CircularProgress, Container, TextField } from '@mui/material';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\n\nimport AuthService from '../../services/auth/auth.service';\nimport { AuthCredentialsDto } from '../../services/auth/dto/auth-credentials.dto';\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n\n  const handleSubmit = async (authCredentialsDto: AuthCredentialsDto) => {\n    setError(false);\n    setStatus('Loading');\n    setLoading(true);\n\n    const res = await AuthService.signup(authCredentialsDto);\n\n    if (res.type === 'SIGNUP') {\n      navigate('/');\n    } else if (res.type === 'ERROR') {\n      setError(true);\n      setStatus(res.message);\n    }\n    setLoading(false);\n  };\n\n  const formik = useFormik<AuthCredentialsDto>({\n    enableReinitialize: true,\n    initialValues: {\n      username: 'Stas',\n      password: 'Aa!_123456!',\n    },\n    validationSchema: yup.object({\n      username: yup.string().required('Fill the field'),\n      password: yup.string().required('Fill the field'),\n    }),\n    onSubmit: (values) => handleSubmit(values),\n  });\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n      }}\n    >\n      <Container\n        maxWidth=\"xs\"\n        sx={{\n          py: 2,\n        }}\n      >\n        <Box\n          sx={{\n            mb: 2,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Typography color=\"textPrimary\" variant=\"h4\">\n            Registration\n          </Typography>\n        </Box>\n        <form onSubmit={formik.handleSubmit}>\n          <Box sx={{ mb: 2, display: 'flex', alignItems: 'flex-end' }}>\n            {loading && <CircularProgress size={20} sx={{ mx: 2 }} />}\n            {error && (\n              <Typography color=\"error\" variant=\"h5\" sx={{ flexGrow: 1, textAlign: 'end' }}>\n                {status}\n              </Typography>\n            )}\n          </Box>\n          <TextField\n            error={Boolean(formik.touched.username && formik.errors.username)}\n            required\n            fullWidth\n            helperText={formik.touched.username && formik.errors.username}\n            label=\"Username\"\n            margin=\"normal\"\n            name=\"username\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.username}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(formik.touched.password && formik.errors.password)}\n            required\n            label=\"Password\"\n            fullWidth\n            helperText={formik.touched.password && formik.errors.password}\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"password\"\n            value={formik.values.password}\n            variant=\"outlined\"\n          />\n          <Box sx={{ py: 2 }}>\n            <Button\n              color=\"primary\"\n              disabled={loading || !!formik.errors.password || !!formik.errors.username}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Sign up\n            </Button>\n          </Box>\n          <Typography color=\"textSecondary\" variant=\"body1\">\n            Already registered?{' '}\n            <Link component={RouterLink} to={'/login'} variant=\"h6\">\n              Sign in\n            </Link>\n          </Typography>\n        </form>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Register;\n","import queryString from 'query-string';\n\nimport BaseHttpService from '../base-http.service';\n\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { TaskDto } from './dto/task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\n\ninterface ISearchFilter {\n  status?: string;\n  search?: string;\n}\n\nclass TasksService extends BaseHttpService {\n  fetchTasks(searchFilter: ISearchFilter = {}) {\n    const queryObj: ISearchFilter = {};\n    const { status, search } = searchFilter;\n\n    if (status?.length) {\n      queryObj.status = status;\n    }\n\n    if (search?.length) {\n      queryObj.search = search;\n    }\n\n    const queryStr = queryString.stringify(queryObj);\n    return this.get<TaskDto[]>('tasks' + (queryStr ? `?${queryStr}` : ''));\n  }\n\n  getById(id: string) {\n    return this.get<TaskDto>(`tasks/${id}`);\n  }\n\n  async deleteById(id: string): Promise<void> {\n    await this.delete(`tasks/${id}`);\n  }\n\n  updateById(id: string, updateTaskDto: UpdateTaskDto) {\n    return this.patch<TaskDto>(`tasks/${id}`, updateTaskDto);\n  }\n\n  createTask(createTaskDto: CreateTaskDto) {\n    return this.post<TaskDto>('tasks', createTaskDto);\n  }\n}\n\nexport default new TasksService();\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { TextField, Button } from '@mui/material';\n\nimport TasksService from '../../../services/tasks/tasks.service';\nimport { TaskDto, TaskStatus } from '../../../services/tasks/dto/task.dto';\n\nimport '../styles.css';\n\nconst CreateTask = () => {\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const [id, setId] = useState('');\n  const [status, setStatus] = useState<TaskStatus>(TaskStatus.OPEN);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    async function fetchById(id: string) {\n      try {\n        const resp = await TasksService.getById(id);\n\n        if (resp.success) {\n          setId(resp.data.id);\n          setStatus(resp.data.status);\n          setTitle(resp.data.title);\n          setDescription(resp.data.description);\n        }\n      } catch (e) {\n        console.error('error: ', e);\n      }\n    }\n\n    if (params.id) {\n      fetchById(params.id);\n    }\n  }, [params]);\n\n  const handleClose = () => navigate('/');\n\n  const createTask = async () => {\n    try {\n      const resp = await TasksService.createTask({\n        title,\n        description,\n      });\n\n      if (resp) {\n        handleClearTask();\n        handleClose();\n      }\n    } catch (err) {\n      console.log('Error: ', err);\n    }\n  };\n\n  const updateTask = async () => {\n    if (!id) return;\n\n    try {\n      const task: TaskDto = {\n        id,\n        title,\n        description,\n        status,\n      };\n\n      const resp = await TasksService.updateById(id, task);\n\n      if (resp) {\n        console.log('Task updated', resp);\n        handleClearTask();\n        handleClose();\n      } else {\n        console.log('Task is not updated', resp);\n      }\n    } catch (err) {\n      console.log('Error: ', err);\n    }\n  };\n\n  const handleClearTask = () => {\n    setTitle('');\n    setDescription('');\n  };\n\n  return (\n    <div className=\"edit-block\">\n      <TextField\n        placeholder=\"Title\"\n        variant=\"outlined\"\n        className=\"text-field\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <TextField\n        placeholder=\"Description\"\n        variant=\"outlined\"\n        className=\"text-field\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <div className=\"buttons\">\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"contained\"\n          onClick={id ? updateTask : createTask}\n          className=\"button\"\n        >\n          {id ? 'Update' : 'Add new'} task\n        </Button>\n        <Button color=\"secondary\" size=\"small\" variant=\"contained\" onClick={handleClearTask} className=\"button\">\n          Clear\n        </Button>\n        <Button color=\"secondary\" size=\"small\" variant=\"contained\" onClick={handleClose} className=\"button\">\n          Close\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateTask;\n","import { useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TableRow, TableCell, IconButton } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\n\nimport { TaskDto, TaskStatus } from '../../../services/tasks/dto/task.dto';\n\nimport theme from '../../../styles/theme';\n\ninterface Props {\n  data: TaskDto;\n  onTaskDelete: (taskId: string) => void;\n  onTaskUpdate: () => void;\n}\n\nconst TaskItem = ({ data, onTaskDelete, onTaskUpdate }: Props) => {\n  const navigate = useNavigate();\n\n  const handleDeleteTask = async (id: string) => {\n    onTaskDelete(data.id);\n  };\n\n  const handleEditTask = useCallback((id) => navigate(id), [navigate]);\n\n  const getTaskStatusToString = (status: TaskStatus) => {\n    let text = '';\n\n    switch (status) {\n      case TaskStatus.OPEN:\n        text = 'Created';\n        break;\n      case TaskStatus.IN_PROGRESS:\n        text = 'In Progress';\n        break;\n      case TaskStatus.DONE:\n        text = 'Done';\n        break;\n      default:\n        text = '';\n    }\n\n    return text;\n  };\n\n  const getTaskStatusColor = (status: TaskStatus) => {\n    let color = '';\n\n    switch (status) {\n      case TaskStatus.OPEN:\n        color = 'gray';\n        break;\n      case TaskStatus.IN_PROGRESS:\n        color = 'orange';\n        break;\n      case TaskStatus.DONE:\n        color = 'green';\n        break;\n      default:\n        color = '';\n    }\n\n    return color;\n  };\n\n  const EditActonIcon = ({ id }: { id: string }) => (\n    <IconButton onClick={() => handleEditTask(id)}>\n      <EditIcon />\n    </IconButton>\n  );\n\n  const DeleteActionIcon = ({ id }: { id: string }) => (\n    <IconButton onClick={() => handleDeleteTask(id)}>\n      <DeleteIcon color=\"action\" />\n    </IconButton>\n  );\n\n  return (\n    <>\n      <TableRow\n        key={data.id}\n        style={{\n          color: getTaskStatusColor(data.status),\n          // color: 'white',\n        }}\n        sx={{\n          '&:last-child td, &:last-child th': { border: 0 },\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n          },\n        }}\n      >\n        <TableCell>{data.title}</TableCell>\n        <TableCell>{data.description}</TableCell>\n        <TableCell>{getTaskStatusToString(data.status)}</TableCell>\n        <TableCell>\n          <EditActonIcon id={data.id} />\n          <DeleteActionIcon id={data.id} />\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nexport default TaskItem;\n","import { FormControlUnstyledComponentsPropsOverrides } from '@mui/core/FormControlUnstyled/FormControlUnstyledProps';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\ninterface Props {\n  title: string;\n  children: React.ReactChild;\n  open: boolean;\n  setOpen: (visible: boolean) => void;\n  onConfirm: () => void;\n}\n\nconst ConfirmDialog = (props: Props) => {\n  const { title, children, open, setOpen, onConfirm } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">{children}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => setOpen(false)} color=\"secondary\">\n          No\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setOpen(false);\n            onConfirm();\n          }}\n          color=\"primary\"\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default ConfirmDialog;\n","import { Table, TableBody, Paper, TableRow, TableHead, TableContainer, TableCell, Button } from '@mui/material';\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport TasksService from '../../../services/tasks/tasks.service';\nimport { TaskDto } from '../../../services/tasks/dto/task.dto';\n\nimport TaskItem from './TaskItem';\n\nimport '../styles.css';\nimport ConfirmDialog from './ConfirmDialog';\n\nconst page = 0;\nconst rowsPerPage = 10;\n\nconst TaskList = () => {\n  const navigate = useNavigate();\n\n  const [tasks, setTasks] = useState<TaskDto[]>([]);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [taskId, setTaskId] = useState('');\n\n  useEffect(() => {\n    async function fetchAll() {\n      try {\n        const resp = await TasksService.fetchTasks();\n        if (resp.success) {\n          setTasks(resp.data);\n        }\n      } catch (e) {\n        console.error('error: ', e);\n      }\n    }\n\n    if (!tasks.length) {\n      fetchAll();\n    }\n  }, []);\n\n  const handleDeleteTask = async () => {\n    console.log('delete an item: ', taskId);\n    try {\n      await TasksService.deleteById(taskId);\n      setTasks((prev) => prev.filter((i) => i.id !== taskId));\n    } catch (err) {\n      console.log('Error: ', err);\n    }\n  };\n\n  const handleDeleteAllTasks = () => console.log('delete all items');\n  const handleNewTask = useCallback(() => navigate('new'), [navigate]);\n  const handleEditTask = useCallback((id) => navigate(id), [navigate]);\n  const showDeleteDialog = (taskId: string) => {\n    setTaskId(taskId);\n    setConfirmOpen(true);\n  };\n\n  return (\n    <>\n      <div className=\"edit-block\">\n        <div className=\"buttons\">\n          <Button color=\"primary\" size=\"small\" variant=\"contained\" onClick={handleNewTask} className=\"button\">\n            Add new task\n          </Button>\n          <Button color=\"secondary\" size=\"small\" variant=\"contained\" onClick={handleDeleteAllTasks} className=\"button\">\n            Delete All\n          </Button>\n        </div>\n      </div>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 800 }} aria-label=\"Tasks\">\n          <TableHead>\n            <TableRow>\n              <TableCell width=\"150px\">Title</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell width=\"30px\">Status</TableCell>\n              <TableCell width=\"100px\" align=\"center\">\n                Actions\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tasks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TaskItem\n                key={row.id}\n                data={row}\n                onTaskDelete={showDeleteDialog}\n                onTaskUpdate={() => handleEditTask(row.id)}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ConfirmDialog title=\"Delete task?\" open={confirmOpen} setOpen={setConfirmOpen} onConfirm={handleDeleteTask}>\n        Are you sure you want to delete this task?\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default TaskList;\n","import { Navigate, useRoutes } from 'react-router-dom';\nimport { RouteObject } from 'react-router';\n\nimport TaskCreate from './components/TaskCreate';\nimport TaskEdit from './components/TaskEdit';\nimport TaskList from './components/TaskList';\n\nconst routes: RouteObject[] = [\n  { path: '/', element: <TaskList /> },\n  { path: '/new', element: <TaskCreate />, index: true },\n  { path: ':id', element: <TaskCreate /> },\n  // { path: '*', element: <Navigate to=\"/\" /> },\n];\n\nexport default function Companies() {\n  return useRoutes(routes);\n}\n","import { Navigate, RouteObject } from 'react-router-dom';\n\nimport MainLayout from '../components/MainLayout';\nimport NotFound from '../components/NotFound';\n\nimport Tasks from './Tasks';\n\nconst routes = (): RouteObject[] => [\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: '/', element: <Navigate to={'/app/tasks'} />, index: true },\n      { path: '/tasks/*', element: <Tasks />, index: true },\n      { path: '*', element: <NotFound /> },\n    ],\n  },\n];\n\nexport default routes;\n","import { Navigate, RouteObject, useRoutes } from 'react-router-dom';\n\nimport MainLayout from './components/MainLayout';\nimport NotFound from './components/NotFound';\nimport Login from './pages/Auth/Login';\nimport Register from './pages/Auth/Register';\nimport appRoutes from './scenes/routes';\n\nconst Apps = () => {\n  return useRoutes(appRoutes());\n};\n\nconst routes = (isLoggedIn: boolean): RouteObject[] => [\n  {\n    path: '/',\n    element: !isLoggedIn ? <MainLayout /> : <Navigate to={'/app'} />,\n    children: [\n      { path: '/login', element: <Login /> },\n      { path: '/register', element: <Register /> },\n      { path: '404', element: <NotFound /> },\n      { path: '/', element: <Navigate to={'login'} /> },\n      { path: '/admin', element: <Navigate to={'login'} /> },\n    ],\n  },\n  {\n    path: '/app/*',\n    element: isLoggedIn ? <Apps /> : <Navigate to={'/login'} />,\n  },\n  { path: '*', element: <NotFound /> },\n];\n\nexport default routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nimport theme from './styles/theme';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Container maxWidth=\"md\">\n          <App />\n        </Container>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import BaseHttpService, { INetworkError, IErrorMessage } from '../base-http.service';\n\nimport { AuthCredentialsDto } from './dto/auth-credentials.dto';\nimport { AuthResponseDto } from './dto/auth-response.dto';\n\nexport interface IAuthQueryResponse {\n  type: 'SIGNUP' | 'SIGNIN';\n}\n\nexport interface ISignUpResponse extends IAuthQueryResponse {\n  type: 'SIGNUP';\n}\n\nexport interface ISignInResponse extends IAuthQueryResponse {\n  type: 'SIGNUP';\n}\n\nexport type QueryResponse = ISignUpResponse | ISignInResponse;\n\nclass AuthService extends BaseHttpService {\n  async signin(authCredentialsDto: AuthCredentialsDto): Promise<ISignInResponse | INetworkError> {\n    try {\n      const result = await this.post<AuthResponseDto>('auth/signin', authCredentialsDto);\n\n      if (!result.success) {\n        return {\n          type: 'ERROR',\n          message: 'unknown error',\n        } as INetworkError;\n      }\n\n      const accessToken = result.data.access_token;\n      this.saveToken(accessToken);\n\n      return {\n        type: 'SIGNUP',\n      } as ISignInResponse;\n    } catch (err) {\n      return {\n        type: 'ERROR',\n        message: err || 'ошибка создания пользователя',\n      } as INetworkError;\n    }\n  }\n\n  async signup(authCredentialsDto: AuthCredentialsDto): Promise<ISignUpResponse | INetworkError> {\n    try {\n      const result = await this.post<AuthResponseDto>('auth/signup', authCredentialsDto);\n\n      if (!result.success) {\n        const message = (result.data as IErrorMessage).error || 'unknown error';\n        return {\n          type: 'ERROR',\n          message,\n        } as INetworkError;\n      }\n\n      const accessToken = result.data.access_token;\n      this.saveToken(accessToken);\n\n      return {\n        type: 'SIGNUP',\n      } as ISignInResponse;\n    } catch (err) {\n      return {\n        type: 'ERROR',\n        message: err || 'ошибка создания пользователя',\n      } as INetworkError;\n    }\n  }\n\n  async signout() {\n    this.removeToken();\n  }\n}\n\nexport default new AuthService();\n","import AuthService from '../services/auth/auth.service';\n\nconst AuthProvider = {\n  _isAuthenticated: false,\n  get isAuthenticated(): boolean {\n    // console.log('accessToken');\n    return !!AuthService.accessToken;\n  },\n  // signin(callback: () => void) {\n  //   AuthProvider._isAuthenticated = true;\n  //   setTimeout(callback, 100);\n  // },\n  async signout(callback: () => void) {\n    const res = await AuthService.signout();\n    AuthProvider._isAuthenticated = false;\n    setTimeout(callback, 100);\n  },\n};\n\nexport default AuthProvider;\n","import axios, { AxiosError } from 'axios';\n\nconst appEnv = process.env.REACT_APP_ENV?.trim() || 'local-dev';\n\nconst serverUrl =\n  appEnv === 'prod'\n    ? 'https://task-management-app-back.herokuapp.com'\n    : appEnv === 'dev'\n    ? 'https://dev-task-management-app-back.herokuapp.com/api/v1'\n    : 'http://localhost:3000/api/v1';\n\nconst appBaseUrl = process.env.REACT_APP_BASE_URL?.trim();\n\nconsole.log('REACT_APP_BASE_URL', appBaseUrl);\nconsole.log('REACT_APP_ENV', appEnv);\nconsole.log('serverUrl', serverUrl);\nconsole.log('baseUrl', appBaseUrl ? appBaseUrl : serverUrl);\n\ninterface IApiResponse<T> {\n  success: boolean;\n  data: T;\n}\n\nexport interface IErrorMessage {\n  error: string;\n  message?: string[];\n}\n\ninterface IApiErrorResponse extends IApiResponse<IErrorMessage> {\n  success: false;\n}\n\nexport interface INetworkError {\n  type: 'ERROR';\n  message: string;\n}\n\nexport default abstract class BaseHttpService {\n  protected BASE_URL = appBaseUrl ? appBaseUrl : serverUrl;\n  private _accessToken: string | null = null;\n\n  protected async get<T>(endpoint: string, options = {}): Promise<IApiResponse<T> | IApiErrorResponse> {\n    try {\n      const res = await axios.get<T>(`${this.BASE_URL}/${endpoint}`, { ...options, ...this.getCommonOptions() });\n      return { success: true, data: res.data };\n    } catch (error) {\n      return this.handleHttpError(error as AxiosError);\n    }\n  }\n\n  protected async post<T>(endpoint: string, data = {}, options = {}): Promise<IApiResponse<T> | IApiErrorResponse> {\n    try {\n      const res = await axios.post<T>(`${this.BASE_URL}/${endpoint}`, data, { ...options, ...this.getCommonOptions() });\n      return { success: true, data: res.data };\n    } catch (error) {\n      return this.handleHttpError(error as AxiosError);\n    }\n  }\n\n  protected async delete<T>(endpoint: string, options = {}): Promise<IApiResponse<T> | IApiErrorResponse> {\n    try {\n      const res = await axios.delete<T>(`${this.BASE_URL}/${endpoint}`, { ...options, ...this.getCommonOptions() });\n      return { success: true, data: res.data };\n    } catch (error) {\n      return this.handleHttpError(error as AxiosError);\n    }\n  }\n\n  protected async patch<T>(endpoint: string, data = {}, options = {}): Promise<IApiResponse<T> | IApiErrorResponse> {\n    try {\n      const res = await axios.patch<T>(`${this.BASE_URL}/${endpoint}`, data, {\n        ...options,\n        ...this.getCommonOptions(),\n      });\n      return { success: true, data: res.data };\n    } catch (error) {\n      return this.handleHttpError(error as AxiosError);\n    }\n  }\n\n  protected handleHttpError(error: AxiosError) {\n    const { statusCode } = error.response?.data;\n\n    if (statusCode === 401) {\n      return this.handle401();\n    } else if (statusCode === 400) {\n      return { success: false, data: error.response?.data } as IApiErrorResponse;\n    } else {\n      throw error;\n    }\n  }\n\n  protected handle401(): IApiErrorResponse {\n    window.location.replace('/login');\n    return { success: false, data: { error: 'No permissions' } };\n  }\n\n  protected getCommonOptions() {\n    const token = this.loadToken();\n\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  get accessToken() {\n    return this._accessToken ? this._accessToken : this.loadToken();\n  }\n\n  protected saveToken(accessToken: string) {\n    this._accessToken = accessToken;\n    return localStorage.setItem('accessToken', accessToken);\n  }\n\n  protected loadToken() {\n    const token = localStorage.getItem('accessToken');\n    this._accessToken = token;\n    return token;\n  }\n\n  protected removeToken() {\n    localStorage.removeItem('accessToken');\n  }\n}\n","import { createTheme, responsiveFontSizes } from '@mui/material/styles';\nimport { grey } from '@mui/material/colors';\n\n// Create a theme instance.\nlet theme = createTheme({\n  palette: {\n    // primary: {\n    //   main: '#2E0076',\n    // },\n    // secondary: teal,\n  },\n  shape: {\n    borderRadius: 5,\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n"],"sourceRoot":""}